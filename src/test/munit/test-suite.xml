<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:s4hana="http://www.mulesoft.org/schema/mule/s4hana" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
    xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
    xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
    xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
        http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
        http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
        http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
        http://www.mulesoft.org/schema/mule/s4hana http://www.mulesoft.org/schema/mule/s4hana/current/mule-s4hana.xsd">
    <munit:config name="test-suite.xml" doc:name="MUnit configuration" />
    <configuration-properties doc:name="Configuration properties" doc:id="234217af-d650-488b-87aa-4276a3c0587d" file="mule.test.properties" />
    <munit:before-test name="test-suiteBefore_Test" description="Before tests actions" doc:id="f098bb37-e35a-4dbe-b3d4-ea5c511a3731">
        <ee:transform doc:name="Prepare common testing data" doc:id="3bf8d24f-f4b2-4b06-be7b-c62a5665e065">
            <ee:message />
            <ee:variables>
                <ee:set-variable variableName="testData"><![CDATA[%dw 2.0
output application/java
var updateTestDataId= randomInt(1000)
var insertTestDataId= randomInt(1000)
---
{
	testUpdateProduct : {
		Name: "TestRecord" ++ updateTestDataId,
		ProductCode: "TestRecord" ++ updateTestDataId,
		Description: "Description" ++ updateTestDataId
	},
	testInsertProduct : {
		Name: "TestRecord" ++ insertTestDataId,
		ProductCode: "TestRecord" ++ insertTestDataId,
		Description: "Description" ++ insertTestDataId
	}
}
]]></ee:set-variable>
            </ee:variables>
        </ee:transform>

        <logger level="INFO" doc:name="Log test data" doc:id="56690b25-ad31-4a29-8e77-49043e6aee1d" message="Test Data: #[output application/json --- vars]" />
        <ee:transform doc:name="Salesforce test data for update" doc:id="da5572ba-c244-4fad-b232-fbe4a8a2338e">
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
	Name: "TestProductName",
	ProductCode: vars.testData.testUpdateProduct.ProductCode
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<salesforce:create doc:name="Create test Product in Salesforce" doc:id="3c5cfa0a-9c18-4197-911b-79a8813c31e3" config-ref="Salesforce_Config" type="Product2">
            <salesforce:records><![CDATA[#[[payload]]]]></salesforce:records>
        </salesforce:create>
		<set-variable value="#[payload[0].id]" doc:name="Store salesforce ID to variable sfdcTestID" doc:id="7c7d7ec1-0acc-4893-b048-9ceaed44d645" variableName="sfdcTestUpdateProductID" />
    </munit:before-test>
    <munit:test name="test-suite-mainFlowTest" description="Test" doc:id="ed97300c-bd30-4245-a000-1ea9e6b7c9d4">
        <munit:execution>
            <flow-ref doc:name="Call queryFlow" doc:id="d51bb94c-357e-44a8-a493-b182952b8bfc" name="queryFlow" />
            <ee:transform doc:name="Preparing test data" doc:id="d2234296-3eff-4f25-8907-d3b3b4039c98">
                <ee:message>
                    <ee:set-payload><![CDATA[%dw 2.0
output application/java
---
[vars.testData.testUpdateProduct,vars.testData.testInsertProduct ]]]></ee:set-payload>
                </ee:message>
            </ee:transform>
            <flow-ref doc:name="Call businessLogicFlow" doc:id="6aa22154-4519-4908-8ab5-d980a96f048d" name="businessLogicFlow" />
            <scripting:execute doc:name="Sleep for 10s until the processing is completed" doc:id="509ddc42-bf33-4a12-a0ef-b9d88056c2a6" engine="groovy">
                <scripting:code>sleep(10000)</scripting:code>
            </scripting:execute>
			<flow-ref doc:name="Call getMigratedTestDataSubFlow" doc:id="ed1674bf-793d-4878-84d4-c51675446b31" name="getMigratedTestDataSubFlow"/>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that doc:name="Assert migrated test record" doc:id="35f406bb-a92d-4509-b784-4211910d7cbf" expression="#[vars.migratedTestInsertProduct.Name]"
                is="#[MunitTools::equalTo(vars.testData.testInsertProduct.Name)]" message="Test record has not been migrated" />
             <munit-tools:assert-that doc:name="Assert updated test record" doc:id="26feaa76-a72b-4644-8f24-664558d158fb" expression="#[vars.migratedTestUpdateProduct.Name]"
                is="#[MunitTools::equalTo(vars.testData.testUpdateProduct.Name)]" message="Test record has not been updated" />
            <munit-tools:verify-call doc:name="Verify call to s4hana query " doc:id="3e2e1dc2-7aea-48d1-9498-8a546d38a2c0" processor="s4hana:query"
                atLeast="1" times="1" />
            <munit-tools:verify-call doc:name="Verify call to Salesforce query" doc:id="b4413b07-01d4-484d-be4b-9655ecf41cf4" processor="salesforce:query-single"
                times="4" atLeast="2" />
            <munit-tools:verify-call doc:name="Verify call to Salesforce upsert" doc:id="80c2bedc-95ea-45bb-a675-1508d597dd4a" processor="salesforce:upsert"
                times="1" atLeast="1" />
        </munit:validation>
    </munit:test>
    <sub-flow name="getMigratedTestDataSubFlow" doc:id="b8dd4f21-8cf6-4059-873b-26288608a8ef" >
		
<salesforce:query-single doc:name="Get migrated new test Product from Salesforce" doc:id="d9774f56-dd09-4063-91a4-e231816c879b" config-ref="Salesforce_Config" target="migratedTestInsertProduct">
                        <salesforce:salesforce-query>SELECT Id, Name, Description, ProductCode FROM Product2 WHERE ProductCode = ':productcode'
                        </salesforce:salesforce-query>
                        <salesforce:parameters><![CDATA[#[output application/java
---
{
	"productcode" : vars.testData.testInsertProduct.ProductCode
}]]]></salesforce:parameters>
                    </salesforce:query-single>
 

<salesforce:query-single doc:name="Get updated test Product from Salesforce" doc:id="51b75f0e-003a-4417-8b8e-e48b9a5e0da9" config-ref="Salesforce_Config" target="migratedTestUpdateProduct">
                        <salesforce:salesforce-query>SELECT Id, Name, Description, ProductCode FROM Product2 WHERE id = ':productID'
                        </salesforce:salesforce-query>
                        <salesforce:parameters><![CDATA[#[output application/java
---
{
	"productID" : vars.sfdcTestUpdateProductID
}]]]></salesforce:parameters>
                    </salesforce:query-single>
		
                   
	</sub-flow>
	<munit:after-test name="test-suiteAfter_Test" description="After tests actions" doc:id="26649279-5938-4f5c-852e-c679fe428218">
        <salesforce:delete doc:name="Delete test Products from Salesforce" doc:id="f6a690e1-157c-4d2a-b2fe-412de01b6853" config-ref="Salesforce_Config">
            <salesforce:delete-ids><![CDATA[#[[vars.migratedTestInsertProduct.Id,vars.migratedTestUpdateProduct.Id]]]]></salesforce:delete-ids>
        </salesforce:delete>

    </munit:after-test>



</mule>
